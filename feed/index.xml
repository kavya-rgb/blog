<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Connected </title>
	<atom:link href="./index.html" rel="self" type="application/rss+xml" />
	<link>./../index.html</link>
	<description>Blog</description>
	<lastBuildDate>Wed, 09 Mar 2022 14:02:18 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.1</generator>
	<item>
		<title>10 Best Free WordPress Hosting Providers for 2022</title>
		<link>./../10-best-free-wordpress-hosting-providers-for-2022/index.html</link>
					<comments>./../10-best-free-wordpress-hosting-providers-for-2022/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 14:02:18 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../10-best-free-wordpress-hosting-providers-for-2022/index.html</guid>

					<description><![CDATA[Finding the right hosting provider is one of the first hurdles on the way to creating your WordPress site. You want the setup to be as easy as possible, and you want your site to perform well, but who needs another bill? A free WordPress hosting package can help you to get started instantly without &#8230;<p class="read-more"> <a class="" href="./../10-best-free-wordpress-hosting-providers-for-2022/index.html"> <span class="screen-reader-text">10 Best Free WordPress Hosting Providers for 2022</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1003872" id="article-body">
<p>Finding the right hosting provider is one of the first hurdles on the way to creating your WordPress site. You want the setup to be as easy as possible, and you want your site to perform well, but who needs another bill? </p>
<p>A free WordPress hosting package can help you to get started instantly without spending a dime. If you want to start your site on a free hosting plan, we have compiled the best free WordPress hosting providers in this collection to help you get started with your new site.</p>
<p><strong>1. HostAwesome</strong><br />HostAwesome offers 100MB of storage and 2,000 page views as part of its free WordPress hosting plan. As your site grows, you can upgrade to any of its affordable premium plans as well. </p>
<p><strong>2. AccuWeb Hosting</strong><br />AccuWeb runs servers equipped with pure SSDs, which means super fast load times, a great experience for your web visitors, and improved SEO performance. You get 2 GB of disk space, 30 GB of bandwidth, and 25 email accounts. In addition, there&#8217;s the added security benefit of multi-layer DDos protection and a free backup.</p>
<p><strong>3. 000webhost</strong><br />000webhost offers free hosting with no ads, 300MB of disk space, and 3GB of bandwidth. You also benefit from Cloudflare protection at no extra cost. If you need more features, their next tier is affordable and includes a free domain and 24/7 support.</p>
<p><strong>4. FreeHostingNoAds</strong><br />The title says it all. This hosting provider offers free hosting for your site without pesky ads or popups. You can use your own domain name with this hosting or get a free subdomain from them. It comes with free email hosting, 1GB of disk space, 5GB of bandwidth, and FTP and file manager access.</p>
<p><strong>5. x10hosting</strong><br />If you are looking for a free cloud hosting option, x10hosting provides a complete hosting package and includes one-click web software installation. It offers unlimited cloud hosting with SSD servers, which you would expect to find with premium hosting providers.</p>
<p><strong>6. Freehostia</strong><br />Freehostia is another hosting provider that offers an ad-free WordPress hosting service without any cost. You can use the free one-click script installer, so you don&#8217;t have to install WordPress manually. The free plan includes 5 domains, 250MB of disk space, 6GB of bandwidth, and 3 email accounts. You also get 24/7 support and MySQL storage.</p>
<p><strong>7. WordPlus.host</strong><br />Ideal for personal blogs and similar sites, WordPlus.host offers much more than just free hosting. With NVMe SSD storage, you&#8217;ll experience 10 times better performance than even the standard SSD. You also receive a CDN service for your site, SSL, and unlimited bandwidth, all free of cost. The only limitation is that the service provides only 200MB of disk space.</p>
<p><strong>8. Byethost</strong><br />A high-quality, free WordPress hosting provider without ads, Byethost offers 5GB of disk space, free 24/7 support, and email forwarding. With their Softaculous script installer, you can have WordPress running in one click. </p>
<p><strong>9. Biz.nf</strong><br />Biz.nf offers an easy-to-use free hosting service with a one-click WordPress installation and automatic configuration feature. It&#8217;s unique in that it will also install high-value WordPress plugins to help you get your new site running quickly with all the essentials baked in. Biz.nf offers several resources: 1000MB of web space, 5000MB of data transfer, and a free domain name (.c1.biz).</p>
<p><strong>10. AwardSpace</strong><br />With AwardSpace, you get one free domain (dx.am), can host up to 4 websites, and benefit from free 24/7 support. You won&#8217;t be plagued with ads, and you will be able to install WordPress in a single click. Features include 1000 MB of disk space, 5 GB of bandwidth, and full MySQL database support.</p>
<p><strong>11. 100 WebSpace</strong><br />100 WebSpace comes with a long list of features including a quick, automated installation of WordPress and other PHP scripts. It provides 100 MB data storage, 3 GB of bandwidth, 3 email accounts, and 24/7 support.</p>
<p>The downside is that it will show a small banner ad on each page to let people know that you host your site on this free hosting plan. </p>
<p><strong>12. Free Hosting</strong><br />Here&#8217;s the deal about the hosting provider Free Hosting: They offer unmetered bandwidth capable of serving practically an unlimited amount of web traffic to an HTML site. For PHP-powered sites like WordPress, it translates to about 30,000 daily visitors. </p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../10-best-free-wordpress-hosting-providers-for-2022/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Top Websites Developed using Vue.js framework</title>
		<link>./../top-websites-developed-using-vue-js-framework/index.html</link>
					<comments>./../top-websites-developed-using-vue-js-framework/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 14:00:46 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../top-websites-developed-using-vue-js-framework/index.html</guid>

					<description><![CDATA[To build single-page applications and web interfaces you need a progressive and robust framework from the frontend side. If you look around Vue.js Framework is winning the game. This moderately smooth framework has been used over more than 650K websites worldwide including big giants like Netflix, Google, and apple. Before getting with your project with &#8230;<p class="read-more"> <a class="" href="./../top-websites-developed-using-vue-js-framework/index.html"> <span class="screen-reader-text">Top Websites Developed using Vue.js framework</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017281" id="article-body">
<p>To build single-page applications and web interfaces you need a progressive and robust framework from the frontend side. If you look around <strong>Vue.js Framework</strong> is winning the game. This moderately smooth framework has been used over more than 650K websites worldwide including big giants like Netflix, Google, and apple. </p>
<p>Before getting with your project with the Vue.js Framework you need to figure out the true potential of this robust front-end technology in order to get the optimum advantage of it. And, this blog will shed light on the popular tech giants who have changed the game for their product by adopting this ultra user-friendly front-end technology.</p>
<p>So, let&#8217;s get started with one of the top global players that successfully have adopted Vue.js technology.</p>
<p>Spendesk is an overall solution as a spend management service for corporate expenses. It allows its users to track expenses across your company by empowering the employees with a clear approval process by simplifying your bookkeeping procedure.</p>
<p>If you are looking for a leading subscription billing software that empowers the subscription management system, recurring billing system, and auto invoicing then Chargebee is your one-stop solution successfully handling more than 2000+ SaaS businesses till now.</p>
<p>Moderne has its speciality in providing personalized insights and precisely tailored ad ideas to its users based on numerous brainstorming sessions. This platform basically highly relies on the mindsets of creative minds.</p>
<p>Keap is considered one of the leading platforms for sales and email marketing for small businesses. Not only that but it also maintains customer relationship management, handling the market automation and e-commerce business.</p>
<p>Mile et UN fund is one of the first government projects targeted at the young generation. The prominent objective of this project is to gather crowdfunding, significant support from the public sector, and business contributions.</p>
<p>This is a social networking site pretty similar to something like Facebook or Instagram. Although, it has pretty fresh and fun categories like entertainment and trending content. It has an enormous amount of users reaching around 150 million in 2022. 9gag is pretty popular for its fun-loving content and excellent user experience of its web application.</p>
<p>Behance is highly popular in the graphic designer&#8217;s community as it makes it pretty easy for them to showcase their work without making any excess efforts. As per statistics, it has around 50M visitors by the latest. It has built with the Vue.js framework as the prime objective of this platform was its impeccable UI/UX.</p>
<p>I hope you have enjoyed this top 7 list of websites developed using the Vue.js Framework. If you are looking forward to building a project that falls under any of these categories or even for other industry domains you would need a well-versed team of Vue.js Developers that can understand the prime object of your project and addresses it thoroughly.</p>
<p>Connect with one of the leading <a href="https://www.bacancytechnology.com/vuejs-development"><strong>Vue.js development company</strong></a> in order to augment the Vue.js Developer team for your project and transform your idea into reality.</p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../top-websites-developed-using-vue-js-framework/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Learn how pharmaceutical companies are using event-driven applications to streamline development of real time data</title>
		<link>./../learn-how-pharmaceutical-companies-are-using-event-driven-applications-to-streamline-development-of-real-time-data/index.html</link>
					<comments>./../learn-how-pharmaceutical-companies-are-using-event-driven-applications-to-streamline-development-of-real-time-data/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 14:00:32 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../learn-how-pharmaceutical-companies-are-using-event-driven-applications-to-streamline-development-of-real-time-data/index.html</guid>

					<description><![CDATA[Pharmaceutical companies easily develop applications using a microservices architecture with event-driven data, decouple frontend and back-end systems, extend middleware, ensure real-time data delivery, integrate legacy system data with web, mobile, and IoT data, and deliver data fast for critical event processing, analytics, and action with the help of Diffusion Intelligent Event data Platform. Explore more &#8230;<p class="read-more"> <a class="" href="./../learn-how-pharmaceutical-companies-are-using-event-driven-applications-to-streamline-development-of-real-time-data/index.html"> <span class="screen-reader-text">Learn how pharmaceutical companies are using event-driven applications to streamline development of real time data</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017289" id="article-body">
<p>Pharmaceutical companies easily develop applications using a microservices architecture with event-driven data, decouple frontend and back-end systems, extend middleware, ensure real-time data delivery, integrate legacy system data with web, mobile, and IoT data, and deliver data fast for critical event processing, analytics, and action with the help of Diffusion Intelligent Event data Platform. </p>
<p><strong><a href="https://www.pushtechnology.com/wp-content/uploads/2021/04/Push-Technology-Value-Prop-Healthcare-Pharmaceutical.pdf%20?utm_source=dev.to&amp;utm_medium=organic&amp;utm_campaign=whitepaper&amp;utm_content=healthcare">Explore more in this whitepaper.</a></strong></p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../learn-how-pharmaceutical-companies-are-using-event-driven-applications-to-streamline-development-of-real-time-data/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Hello Dev</title>
		<link>./../hello-dev/index.html</link>
					<comments>./../hello-dev/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 14:00:24 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../hello-dev/index.html</guid>

					<description><![CDATA[Wow, I feel immense pressure writing this first post. Not unlike the pressure I often when learning to code. I&#8217;m 46. I haven&#8217;t coded since my TRS-80 computer from RadioShack. Ok, who remembers RadioShack? But I&#8217;ve always had an interest. I wish that I had the tools and educational resources I do today back when &#8230;<p class="read-more"> <a class="" href="./../hello-dev/index.html"> <span class="screen-reader-text">Hello Dev</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<p>Wow, I feel immense pressure writing this first post. Not unlike the pressure I often when learning to code.</p>
<p>I&#8217;m 46. I haven&#8217;t coded since my TRS-80 computer from RadioShack. Ok, who remembers RadioShack? But I&#8217;ve always had an interest.  </p>
<p>I wish that I had the tools and educational resources I do today back when I got my first real PC.  Back then however you had to hope someone had a bootleg of Visual Basic, even then you had no real way to learn it.  At least not the way you can learn today.</p>
<p>Back in 2020, I found Udemy.  At the time I needed to learn Adobe InDesign and Photoshop.  From there I found an Intro to Coding course.  I enjoyed it so I explored it more. I then took a course in web development and eventually I found myself venturing into the realm of game development.</p>
<p>Since I am a complete noob and I wasn&#8217;t learning for a current or new job I spent the last year or so exploring different venues.  Today I am beginning to settle in.  My current areas of study are Python, C#, HTML, and CSS.  I&#8217;m using Visual Studio 2022 and the WordPress environment which is actually for my current job.</p>
<p>I blog about my journey to become an indie game developer on my website <a href="http://d24indiegames.com/journey/">D24 Indie Games</a>.  The blog has been an essential tool in helping me continue forward.</p>
<p>Happy to be here on DEV and looking forward to taking my coding journey to the next level.</p>

]]></content:encoded>
					
					<wfw:commentRss>./../hello-dev/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Maps &#038; Sets in JavaScript</title>
		<link>./../maps-sets-in-javascript/index.html</link>
					<comments>./../maps-sets-in-javascript/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 14:00:10 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../maps-sets-in-javascript/index.html</guid>

					<description><![CDATA[In JavaScript, objects are wonderfully versatile, and arrays are wonderfully fast. But a couple more items sit in the middle of these two; the lesser know Map and Set. Designed to make data access faster and simpler, you’ll be hard-pressed to find a coding challenge site that doesn’t involve at least one of these (typically &#8230;<p class="read-more"> <a class="" href="./../maps-sets-in-javascript/index.html"> <span class="screen-reader-text">Maps &#038; Sets in JavaScript</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017278" id="article-body">
<p>In JavaScript, objects are wonderfully versatile, and arrays are wonderfully fast. But a couple more items sit in the middle of these two; the lesser know <code>Map</code> and <code>Set</code>.</p>
<p>Designed to make data access faster and simpler, you’ll be hard-pressed to find a coding challenge site that doesn’t involve at least one of these (typically <code>Map</code>) on more than a few of their challenges.</p>
<p><code>Map</code> and <code>Set</code> share some things, so let’s kick things off with <code>Map</code>.</p>
<h2>
  <a name="map" href="#map"><br />
  </a><br />
  Map<br />
</h2>
<p>A <code>Map</code> is a key-value store (much like an array), that will allow you you to use just about anything you want as a key, maintains insertion order, has a size property, and rejects duplicate keys. Now that’s a lot of features right there, so let’s look at a basic example first:</p>
<p>Straight away you can begin to see the performance advantages of a <code>Map</code>. No more looping through massive data-sets to find what you need, just call <code>Map.get()</code> and you’re done! The classic example for a good <code>Map</code> is often a phone-book, and that makes sense, because you can imagine how efficient it is to call upon any random contact from a phone-book using a <code>Map</code>, which knows each and every entry in there by heart.</p>
<h3>
  <a name="keys" href="#keys"><br />
  </a><br />
  Keys<br />
</h3>
<p>But <code>Map</code> is also incredibly versatile. Unlike arrays, it’ll let you use just about whatever you want as a key, whether it be strings, integers, objects, or even functions!</p>
<h3>
  <a name="looping" href="#looping"><br />
  </a><br />
  Looping<br />
</h3>
<p><code>Map</code> will also retain their insertion order, which is incredibly important when you want to know what came first. Now of course, <code>Map</code> isn’t an array, so you can’t call <code>mapName[0]</code> to get the first entry (as <code>0</code> is a valid key for a <code>Map</code>!), so you might be wondering why insertion order matters?</p>
<p>Well, <code>Map</code> also come with a variety of methods you’ll find familiar from <a href="https://dev.to/duncanmcardle/battle-of-the-javascript-for-loops-for-forin-forof-foreach-etc-4lae">my post on for loops</a>, such as <code>Map.values()</code> , <code>Map.keys()</code> , <code>Map.entries()</code> and the infamous <code>forEach</code> , all of which benefit from the original data being in the order it was inserted.</p>
<h3>
  <a name="duplication" href="#duplication"><br />
  </a><br />
  Duplication<br />
</h3>
<p>Finally it’s worth pointing out another helpful <code>Map</code> function: <code>Map.has()</code> . This is a simple utility for checking whether a given key already exists in a <code>Map</code>, and can therefore be used to avoid overwriting existing data (which <code>Map</code> will absolutely allow!):</p>
<h2>
  <a name="set" href="#set"><br />
  </a><br />
  Set<br />
</h2>
<p>Now that we’ve discussed <code>Map</code> , <code>Set</code> is actually super-simple. Think of <code>Set</code> as being a <code>Map</code> without the keys. So all values, no keys. Simple!</p>
<h3>
  <a name="duplication" href="#duplication"><br />
  </a><br />
  Duplication<br />
</h3>
<p>The beauty of this is that it’s a very straightforward interface for dumping data that will retain its insertion order. But one really powerful aspect is that it will not allow data to be non-unique. This means that if you have a 10,000 item data set, and you insert it all into a <code>Set</code>, what you’ll be left with will all be unique. In addition, <code>Set</code> does (like <code>Map</code>) implement <code>.has()</code> , but this time around you’ll be checking if the <code>Set</code> has a <em>value</em>, rather than checking if a <code>Map</code> has a <em>key</em>.</p>
<p>If you’re suddenly thinking back to the last time you did a coding challenge, and realising this would have been super helpful, don’t worry, we’ve all been there.</p>
<h3>
  <a name="looping" href="#looping"><br />
  </a><br />
  Looping<br />
</h3>
<p>Just like with <code>Map</code>, <code>Set</code> has a number of helpful methods for iteration. You can use <code>Set.keys()</code> , <code>Set.values()</code> and <code>Set.entries()</code> , as well as the classic <code>Set.forEach()</code> . Though if you’re sitting there thinking “Wait, what keys, and what entries?”, you’d be right. In order to keep <code>Map</code> and <code>Set</code> close together in terms of spec, these additional functions have been provided, but in reality, they all return the same thing (or in some cases, two versions of the same thing!):</p>
<h2>
  <a name="communal-functionality-clear-and-delete-" href="#communal-functionality-clear-and-delete-"><br />
  </a><br />
  Communal functionality ( .clear() and .delete() )<br />
</h2>
<p>In addition to the communal functionality and similarities already listed, both <code>Map</code> and <code>Set</code> also implement <code>clear()</code> (which will completely empty out the contents) and <code>delete()</code> (which will remove a specific entry (by key for <code>Map</code> and by value for <code>Set</code>)).</p>
<h2>
  <a name="when-to-use-map-amp-set" href="#when-to-use-map-amp-set"><br />
  </a><br />
  When to use Map &amp; Set<br />
</h2>
<p>Now that you know <em>how</em> to use these wonderful data structures, you might be wondering <em>when</em> to use them. Well the simple answer is: for data-sets (as the name suggests).</p>
<p>For <code>Map</code> , the power of <code>.get()</code> is truly incredible. Being able to dump massive amounts of data into a <code>Map</code> and then be able to call upon the entry you need without looping is incredibly useful, and comes without the overhead and complexities of the classic Object.</p>
<p>For <code>Set</code>, my personal favourite feature (and one I alluded to earlier) is being able to guarantee a unique set of data. This is logic that would normally be difficult and time consuming, but <code>Set</code> just… does it!</p>
<p>As with all of these modern constructs, it’s all about using the right tool for the job, so I hope now that you’ve read this article, you’ll feel just a little bit better equipped to make that decision.</p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../maps-sets-in-javascript/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Call, Apply and Bind in JavaScript</title>
		<link>./../call-apply-and-bind-in-javascript/index.html</link>
					<comments>./../call-apply-and-bind-in-javascript/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 13:59:59 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../call-apply-and-bind-in-javascript/index.html</guid>

					<description><![CDATA[Given the various ways in which the infamous this keyword can be altered in JavaScript (global, functions, arrow functions, classes, objects, etc.) it’s not surprising that somewhere along the way functionality started appearing that helps alter the calling context, and thus the value of this . Three particular functions that have appeared to help are &#8230;<p class="read-more"> <a class="" href="./../call-apply-and-bind-in-javascript/index.html"> <span class="screen-reader-text">Call, Apply and Bind in JavaScript</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017293" id="article-body">
<p>Given the various ways in which the infamous <code>this</code> keyword can be altered in JavaScript (global, functions, arrow functions, classes, objects, etc.) it’s not surprising that somewhere along the way functionality started appearing that helps alter the calling context, and thus the value of <code>this</code> . Three particular functions that have appeared to help are <strong>Call</strong>, <strong>Apply</strong> and <strong>Bind</strong>, and there’s a reason that I list them in that order.</p>
<h2>
  <a name="call" href="#call"><br />
  </a><br />
  Call<br />
</h2>
<p>Think of <strong>Call</strong> as being like saying “I’d like to call something, but I’d like to provide my own context for where it gets called”. This makes a lot of sense when you look at objects and classes. Take the following example:</p>
<p>What we’re doing here is that we’re taking the <code>toyotaHilux</code> object, which has no <code>beepHorn()</code> method, and using it as the context for a call to the <code>fordFocus</code> object’s <code>beepHorn()</code> method. It’s kind of like saying, “Hey <code>fordFocus</code>, pretend you’re <code>toyotaHilux</code> for a second, and then call that great <code>beepHorn()</code> method of yours”.</p>
<p>In addition to the context we provide to Call, we can also provide some parameters to be passed to the target method, like so:</p>
<h2>
  <a name="apply" href="#apply"><br />
  </a><br />
  Apply<br />
</h2>
<p>Think of <strong>Apply</strong> as being like <strong>Call</strong>, but with the ability to supply parameters to the target function as an array rather than standard parameters. Otherwise, it’s more or less identical:</p>
<p>Now you may be wondering why the parameters are supplied as an array. The reason for this is that as <strong>Apply</strong> could be called on a function with no parameters, 2 parameters or even 427 parameters, it makes it much more manageable to pass it an array of parameters instead.</p>
<p>Interestingly, this additional functionality over <strong>Call</strong> also provides us with another feature: the ability to call functions with an array of parameters. Here’s an example:</p>
<p>As you can see we have a simple addition function which takes 2 parameters. The way we’re calling it however is to use <strong>Apply</strong>, supplying no context (as there’s no use of <code>this</code>), and then providing an array of parameters to be passed. <strong>Apply</strong> then handles converting this array into traditional parameters, and calls the function. I’ve also included an attempt to call the function with the array without using <strong>Apply</strong> to demonstrate what happens normally.</p>
<p>Now just for completeness sake, you might be wondering how this technique performs if the array of parameters provided is bigger or smaller than the parameters the function is expecting. Well the answer is that if you don’t provide enough parameters, the missing ones will be become <code>undefined</code> (unless you declare a default value in the function declaration), and if you provide too many it’ll just chop off the excess. Here’s an example:</p>
<p>Now this isn’t necessarily the best way to convert an array to parameters, but it’s a common one you’ll see on coding challengers, and it’s an interesting case of taking something that’s been designed for one purpose, and using it for something completely different.</p>
<h2>
  <a name="bind" href="#bind"><br />
  </a><br />
  Bind<br />
</h2>
<p>Think of Bind as being like a re-usable version of <strong>Call</strong>. You declare a variable, and then bind it to the target function, with an optional target context, and provide some optional parameters, and then you can call it whenever you want.</p>
<p>Let’s first look at an example of binding with a context provided:</p>
<p>As you can see, it’s basically the same as a <strong>Call</strong>, but re-usable.</p>
<p>Now let’s look at an example of <strong>Bind</strong> that supplies some parameters:</p>
<p>Finally let’s bring everything together by binding to a function and supplying both context and parameters:</p>
<p>As you can see, the <code>boundInflateToyotaTyre</code> variable is bound to calling the <code>inflateTyre</code> method of the <code>fordFocus</code> object, but using the <code>toyotaHilux</code> context.</p>
<p><strong>Note:</strong> I’d be remiss if I didn’t point out that the more helpful use-case for <strong>Bind</strong> in this example would be to bind <em>without</em> the parameters, so they can be specified at call time, such as in the following example:</p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../call-apply-and-bind-in-javascript/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Constantes de WordPress &#8211; DEV Community</title>
		<link>./../constantes-de-wordpress-dev-community/index.html</link>
					<comments>./../constantes-de-wordpress-dev-community/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 13:59:50 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../constantes-de-wordpress-dev-community/index.html</guid>

					<description><![CDATA[Una constante [PHP] es un identificador (nombre) para un valor simple. Por convención, los identificadores de constantes siempre se declaran en mayúsculas. define( 'IDENTIFICADOR', 'valor' ); Enter fullscreen mode Exit fullscreen mode Según PHP.net Su finalidad no es ofrecer la lista completa de constantes nativas de WordPress. Algunas de categorías generales de uso. FAVOR DE &#8230;<p class="read-more"> <a class="" href="./../constantes-de-wordpress-dev-community/index.html"> <span class="screen-reader-text">Constantes de WordPress &#8211; DEV Community</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1005460" id="article-body">
<blockquote>
<p>Una constante [PHP] es un identificador (nombre) para un valor simple. Por convención, los identificadores de constantes siempre se declaran en mayúsculas.</p>
</blockquote>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="nb">define</span><span class="p">(</span> <span class="s1">'IDENTIFICADOR'</span><span class="p">,</span> <span class="s1">'valor'</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Según <a href="https://www.php.net/manual/es/language.constants.php">PHP.net</a></p>
<p>Su finalidad no es ofrecer la lista completa de constantes nativas de WordPress. Algunas de categorías generales de uso.</p>
<p><strong>FAVOR DE UTILIZARLA CON PRECAUCIÓN!</strong></p>
<h2>
  <a name="mostrar-todas-las-constantes-php" href="#mostrar-todas-las-constantes-php"><br />
  </a><br />
  Mostrar todas las constantes PHP<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="nb">print_r</span><span class="p">(</span><span class="nb">get_defined_constants</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="no-modificar" href="#no-modificar"><br />
  </a><br />
  No modificar<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// URLs/path</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WP_INC</span><span class="p">);</span> <span class="c1">// /wp-includes/</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">ABSPATH</span><span class="p">);</span> <span class="c1">// root</span>

<span class="c1">// tiempo</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">MINUTE_IN_SECONDS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">HOUR_IN_SECONDS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">DAY_IN_SECONDS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WEEK_IN_SECONDS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">MONTH_IN_SECONDS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">YEAR_IN_SECONDS</span><span class="p">);</span>

<span class="c1">// tamaño</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">KB_IN_BYTES</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">MB_IN_BYTES</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">GB_IN_BYTES</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">TB_IN_BYTES</span><span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="en-curso" href="#en-curso"><br />
  </a><br />
  En curso<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// my_script.php</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">DOING_AJAX</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WP_IMPORTING</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WP_LOAD_IMPORTERS</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WP_INSTALLING</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">IFRAME_REQUEST</span><span class="p">);</span>
<span class="nb">print_r</span><span class="p">(</span><span class="no">WP_UNINSTALL_PLUGIN</span><span class="p">);</span><span class="c1">// archivo</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="db" href="#db"><br />
  </a><br />
  DB<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_NAME'</span><span class="p">,</span> <span class="s1">'database'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_USER'</span><span class="p">,</span> <span class="s1">'username'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_PASSWORD'</span><span class="p">,</span> <span class="s1">'password'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_HOST'</span><span class="p">,</span> <span class="s1">'localhost'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_CHARSET'</span><span class="p">,</span> <span class="s1">'utf8'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DB_COLLATE'</span><span class="p">,</span> <span class="s1">''</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_ALLOW_REPAIR'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span> <span class="c1">//  por defecto false</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'CUSTOM_USER_TABLE'</span><span class="p">,</span> <span class="s1">'usr'</span> <span class="p">);</span> <span class="c1">// por defecto 'wp_users'</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'CUSTOM_USER_META_TABLE'</span><span class="p">,</span> <span class="s1">'usr-metadata'</span> <span class="p">);</span> <span class="c1">// por defecto 'wp_usermeta'</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="bootstrap" href="#bootstrap"><br />
  </a><br />
  Bootstrap<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// bootstrap.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SHORTINIT'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_USE_THEMES'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span>
<span class="k">require_once</span> <span class="nv">$_SERVER</span><span class="p">[</span> <span class="s1">'DOCUMENT_ROOT'</span> <span class="p">]</span> <span class="mf">.</span> <span class="s1">'/wp-load.php'</span><span class="p">;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="urls-archivos" href="#urls-archivos"><br />
  </a><br />
  URLs &#8211; Archivos<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_SITEURL'</span><span class="p">,</span> <span class="s1">'https://sitio.es/'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_HOME'</span><span class="p">,</span> <span class="s1">'https://sitio.es/'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_CONTENT_DIR'</span><span class="p">,</span> <span class="s1">'wp-content'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WPMU_PLUGIN_DIR'</span><span class="p">,</span> <span class="s1">'{WP_CONTENT_DIR}/mu-plugins'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PLUGIN_DIR'</span><span class="p">,</span> <span class="s1">'{WP_CONTENT_DIR}/plugins'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_CONTENT_URL'</span><span class="p">,</span>  <span class="s1">'{Sitio URL}/wp-content'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WPMU_PLUGIN_URL'</span><span class="p">,</span> <span class="s1">'{WP_CONTENT_URL}/mu-plugins'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_TEMP_DIR'</span><span class="p">,</span> <span class="s1">'/path/to/tmp'</span> <span class="p">);</span> <span class="c1">// no público</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_LANG_DIR'</span><span class="p">,</span> <span class="s1">'{WP_CONTENT_DIR}/languages'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'UPLOADS'</span><span class="p">,</span> <span class="s1">'{WP_CONTENT_DIR}/uploads'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_DEFAULT_THEME'</span><span class="p">,</span> <span class="s1">'mi-tema'</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-content/themes/thema/functions.php</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="s1">'TEMPLATEPATH'</span><span class="p">))</span>
    <span class="nb">define</span><span class="p">(</span> <span class="s1">'TEMPLATEPATH'</span><span class="p">,</span> <span class="nf">get_template_directory</span><span class="p">()</span> <span class="p">);</span>

<span class="c1">// wp-content/themes/thema-child/functions.php</span>
<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">defined</span><span class="p">(</span><span class="s1">'STYLESHEETPATH'</span><span class="p">))</span>
    <span class="nb">define</span><span class="p">(</span> <span class="s1">'STYLESHEETPATH'</span><span class="p">,</span> <span class="nf">get_stylesheet_directory</span><span class="p">()</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="debug-env-dev" href="#debug-env-dev"><br />
  </a><br />
  Debug (ENV DEV)<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_DEBUG'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SCRIPT_DEBUG'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_DEBUG_DISPLAY'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span>
<span class="o">@</span><span class="nb">ini_set</span><span class="p">(</span> <span class="s1">'display_errors'</span><span class="p">,</span> <span class="mi">0</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_DEBUG_LOG'</span><span class="p">,</span> <span class="s1">'/path/to/error.log'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SAVEQUERIES'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span> <span class="c1">// $wpdb-&gt;queries</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="sistema-de-archivos" href="#sistema-de-archivos"><br />
  </a><br />
  Sistema de archivos<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FS_CHMOD_DIR'</span><span class="p">,</span> <span class="s1">'0755'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FS_CHMOD_FILE'</span><span class="p">,</span> <span class="s1">'0644'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FS_METHOD'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FS_CONNECT_TIMEOUT'</span><span class="p">,</span> <span class="mi">30</span> <span class="p">);</span><span class="c1">// segundos</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FS_TIMEOUT'</span><span class="p">,</span> <span class="mi">30</span> <span class="p">);</span><span class="c1">// segundos</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_BASE'</span><span class="p">,</span> <span class="no">ABSPATH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_CONTENT_DIR'</span><span class="p">,</span> <span class="no">WP_CONTENT_DIR</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_LANG_DIR'</span><span class="p">,</span> <span class="no">WP_LANG_DIR</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_HOST'</span><span class="p">,</span> <span class="s1">'221.22.11.11'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_USER'</span><span class="p">,</span> <span class="s1">'xxxxxxx'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_PASS'</span><span class="p">,</span> <span class="s1">'yyyyyyy'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_PRIKEY'</span><span class="p">,</span> <span class="s1">'privkey'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_PUBKEY'</span><span class="p">,</span> <span class="s1">'pubkey'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_SSH'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FTP_SSL'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="rendimiento" href="#rendimiento"><br />
  </a><br />
  Rendimiento<br />
</h2>
<h3>
  <a name="cache-memory" href="#cache-memory"><br />
  </a><br />
  Cache &#8211; memory<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_CACHE'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_CACHE_KEY_SALT'</span><span class="p">,</span> <span class="s1">''</span> <span class="p">);</span> <span class="c1">// object-cache.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_MAX_MEMORY_LIMIT'</span><span class="p">,</span> <span class="s1">'256M'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_MEMORY_LIMIT'</span><span class="p">,</span> <span class="s1">'128M'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_POST_REVISIONS'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'AUTOSAVE_INTERVAL'</span><span class="p">,</span> <span class="mi">120</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'EMPTY_TRASH_DAYS'</span><span class="p">,</span> <span class="mi">0</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'MEDIA_TRASH'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>


<span class="c1">// archivo.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DONOTCACHEPAGE'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span> <span class="c1">// 0 cache</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h3>
  <a name="css-js-gzip" href="#css-js-gzip"><br />
  </a><br />
  CSS &#8211; JS &#8211; GZIP<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="nb">define</span><span class="p">(</span> <span class="s1">'CONCATENATE_SCRIPTS'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'COMPRESS_CSS'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'COMPRESS_SCRIPTS'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'ENFORCE_GZIP'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h3>
  <a name="cron" href="#cron"><br />
  </a><br />
  CRON<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="nb">define</span><span class="p">(</span> <span class="s1">'DISABLE_WP_CRON'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span> <span class="c1">// utilizar el CRON del servidor</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="seguridad" href="#seguridad"><br />
  </a><br />
  Seguridad<br />
</h2>
<h3>
  <a name="fortalecimiento-de-la-seguridad" href="#fortalecimiento-de-la-seguridad"><br />
  </a><br />
  Fortalecimiento de la seguridad<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DISALLOW_FILE_EDIT'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DISALLOW_FILE_MODS'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DISALLOW_UNFILTERED_HTML'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'FORCE_SSL_ADMIN'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'ALLOW_UNFILTERED_UPLOADS'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span>

<span class="c1">// wp-config.php - salt keys</span>
<span class="c1">// https://api.wordpress.org/secret-key/1.1/salt</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'AUTH_KEY'</span><span class="p">,</span> <span class="s1">'$JA]2Be{ Up0&amp;yVF_-*rWt(5{Y/^St&gt;$1Toq*}|&lt;&amp;FTVp5WOTr9 v9qMKd?OB55b'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SECURE_AUTH_KEY'</span><span class="p">,</span> <span class="s1">'*7]}KUj(L@-qh&amp;$qcUfHy.1%G{KyS8t|m.fkg]B2&lt;E`0 O@|.TG3(t!3XL+B-M!H'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'LOGGED_IN_KEY'</span><span class="p">,</span> <span class="s1">'{GM-.qgy93K@&lt;!je,W5%_DZ&gt;+| 4sN5A+`zuKksP[b*h8Cp097f2SddkymPTj=|_'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'NONCE_KEY'</span><span class="p">,</span> <span class="s1">'=#vpZYdG{QP8m!81%c9w8kXNyMX{7mqc|A9C??gLkH:Vk,9S`y.U&amp;-vn#S#eeeWV'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'AUTH_SALT'</span><span class="p">,</span> <span class="s1">'+4_)~Qs6 }6!1/U}X-P378LY_=AaA(xe9~Iw*un!c7[n]VF7KuKH|+X5h,6jAh2+'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SECURE_AUTH_SALT'</span><span class="p">,</span> <span class="s1">'0zcKS|J{E*Njl!@e;%pSvdD/`]^rU-OW&lt;-:j!C-9 &gt;ulz,M^7|hB:[nh.RT}`A]p'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'LOGGED_IN_SALT'</span><span class="p">,</span> <span class="s1">'jc^rkY5kNuk6nhyVzPD{ J8,-{ y1#X6(8S&amp;E%@4Y(&lt;=A!nc+D8d-+qGG9FJtxR^'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'NONCE_SALT'</span><span class="p">,</span> <span class="s1">'[;2nqDhw@:AL{;^=ViY-YX-Sm7y$K7!f&lt;O+MI!gqKyt;f~0PX:g1g*=x/p4dgWuS'</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h3>
  <a name="actualizaci%C3%B3n" href="#actualizaci%C3%B3n"><br />
  </a><br />
  Actualización<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'AUTOMATIC_UPDATER_DISABLED'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span> <span class="c1">// true, false</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_AUTO_UPDATE_CORE'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span> <span class="c1">// true, false, minor</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'CORE_UPGRADE_SKIP_NEW_BUNDLED'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span> <span class="c1">// twenty themes, hello dolly</span>
<span class="nb">define</span> <span class="p">(</span> <span class="s1">'DO_NOT_UPGRADE_GLOBAL_TABLES'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h3>
  <a name="bloqueo-ampamp-proxy-para-los-iniciados" href="#bloqueo-ampamp-proxy-para-los-iniciados"><br />
  </a><br />
  Bloqueo &amp;&amp; Proxy (para los iniciados!)<br />
</h3>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_HTTP_BLOCK_EXTERNAL'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span> <span class="c1">// solicitudes salientes</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_ACCESSIBLE_HOSTS'</span><span class="p">,</span> <span class="s1">'localhost, www.example.com, *.wordpress.org'</span> <span class="p">);</span>

<span class="c1">// proxy</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PROXY_HOST'</span><span class="p">,</span> <span class="s1">'192.168.84.104'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PROXY_PORT'</span><span class="p">,</span> <span class="s1">'8080'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PROXY_USERNAME'</span><span class="p">,</span> <span class="s1">'xxxxxxx'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PROXY_PASSWORD'</span><span class="p">,</span> <span class="s1">'yyyyyyy'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PROXY_BYPASS_HOSTS'</span><span class="p">,</span> <span class="s1">'localhost, www.example.com, *.wordpress.org'</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="cookies" href="#cookies"><br />
  </a><br />
  Cookies<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'COOKIEHASH'</span><span class="p">,</span> <span class="s1">''</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'USER_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpressuser_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'PASS_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpresspass_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'AUTH_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpress_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SECURE_AUTH_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpress_sec_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'LOGGED_IN_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpress_logged_in_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'TEST_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpress_test_cookie'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'COOKIEPATH'</span><span class="p">,</span> <span class="nb">preg_replace</span><span class="p">(</span> <span class="s1">'|https?://[^/]+|i'</span><span class="p">,</span> <span class="s1">''</span><span class="p">,</span> <span class="nf">get_option</span><span class="p">(</span> <span class="s1">'home'</span> <span class="p">)</span> <span class="mf">.</span> <span class="s1">"https://dev.to/"</span> <span class="p">)</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SITECOOKIEPATH'</span><span class="p">,</span> <span class="nb">preg_replace</span><span class="p">(</span> <span class="s1">'|https?://[^/]+|i'</span><span class="p">,</span> <span class="s1">''</span><span class="p">,</span> <span class="nf">get_option</span><span class="p">(</span> <span class="s1">'siteurl'</span> <span class="p">)</span> <span class="mf">.</span> <span class="s1">"https://dev.to/"</span> <span class="p">)</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'ADMIN_COOKIE_PATH'</span><span class="p">,</span> <span class="no">SITECOOKIEPATH</span> <span class="mf">.</span> <span class="s1">'wp-admin'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'PLUGINS_COOKIE_PATH'</span><span class="p">,</span> <span class="nb">preg_replace</span><span class="p">(</span> <span class="s1">'|https?://[^/]+|i'</span><span class="p">,</span> <span class="s1">''</span><span class="p">,</span> <span class="no">WP_PLUGIN_URL</span> <span class="p">)</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'COOKIE_DOMAIN'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'RECOVERY_MODE_COOKIE'</span><span class="p">,</span> <span class="s1">'wordpress_rec_'</span> <span class="mf">.</span> <span class="no">COOKIEHASH</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="multisite" href="#multisite"><br />
  </a><br />
  Multisite<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-config.php</span>
<span class="c1">// No se trata de una lista completa</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_ALLOW_MULTISITE'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SUBDOMAIN_INSTALL'</span><span class="p">,</span> <span class="kc">false</span> <span class="p">);</span> <span class="c1">// sitio.es/site1, sitio.es/site2, sitio.es/site3</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'DOMAIN_CURRENT_SITE'</span><span class="p">,</span> <span class="s1">'sitio.es'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'PATH_CURRENT_SITE'</span><span class="p">,</span> <span class="s1">"https://dev.to/"</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'SITE_ID_CURRENT_SITE'</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'BLOG_ID_CURRENT_SITE'</span><span class="p">,</span> <span class="mi">1</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="pruebas" href="#pruebas"><br />
  </a><br />
  Pruebas<br />
</h2>
<div class="highlight js-code-highlight">
<pre class="highlight php"><code><span class="c1">// wp-tests-config.php</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_TESTS_DOMAIN'</span><span class="p">,</span> <span class="s1">'example.org'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_TESTS_EMAIL'</span><span class="p">,</span> <span class="s1">'admin@example.org'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_TESTS_TITLE'</span><span class="p">,</span> <span class="s1">'Test Blog'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_PHP_BINARY'</span><span class="p">,</span> <span class="s1">'php'</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'WP_TESTS_FORCE_KNOWN_BUGS'</span><span class="p">,</span> <span class="kc">true</span> <span class="p">);</span>
<span class="nb">define</span><span class="p">(</span> <span class="s1">'REST_TESTS_IMPOSSIBLY_HIGH_NUMBER'</span><span class="p">,</span> <span class="mi">100000</span> <span class="p">);</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Foto del autor <a href="https://unsplash.com/@kazuo513?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Kazuo ota</a></p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../constantes-de-wordpress-dev-community/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Etiquetas que no debes olvidar en tus docs HTML</title>
		<link>./../etiquetas-que-no-debes-olvidar-en-tus-docs-html/index.html</link>
					<comments>./../etiquetas-que-no-debes-olvidar-en-tus-docs-html/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 13:59:19 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../etiquetas-que-no-debes-olvidar-en-tus-docs-html/index.html</guid>

					<description><![CDATA[Esta tarde me percate de algo curioso que pasa en VSCode.Cuando trabajamos con HTML podemos usar el atajo HTML:5 para que el editor cree por nosotros una estructura básica y empezar a trabajar.Dicha estructura es la siguiente: &#60;!DOCTYPE html&#62; &#60;html lang="en"&#62; &#60;head&#62; &#60;meta charset="UTF-8"&#62; &#60;meta http-equiv="X-UA-Compatible" content="IE=edge"&#62; &#60;meta name="viewport" content="width=device-width, initial-scale=1.0"&#62; &#60;title&#62;Document&#60;/title&#62; &#60;/head&#62; &#60;body&#62; &#60;/body&#62; &#8230;<p class="read-more"> <a class="" href="./../etiquetas-que-no-debes-olvidar-en-tus-docs-html/index.html"> <span class="screen-reader-text">Etiquetas que no debes olvidar en tus docs HTML</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1016605" id="article-body">
<p>Esta tarde me percate de algo curioso que pasa en VSCode.<br />Cuando trabajamos con HTML podemos usar el atajo <code>HTML:5</code> para que el editor cree por nosotros una estructura básica y empezar a trabajar.<br />Dicha estructura es la siguiente:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>No esta nada mal, pero dentro del <code>head</code> podemos agregar algunas etiquetas <code>meta</code> y <code>link</code> para complementar un poco más el documento y que se vea más profesional.</p>
<h2>
  <a name="la-etiqueta-raw-ltmetagt-endraw-" href="#la-etiqueta-raw-ltmetagt-endraw-"><br />
  </a><br />
  La etiqueta <code>&lt;meta&gt;</code><br />
</h2>
<p>Contienen metadatos que no se ven en la web final pero que le sirven al documento para que se indexe mejor.<br />Por ejemplo:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"author"</span> <span class="na">content=</span><span class="s">"Cristian Fernando"</span><span class="nt">&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Podriamos poner el autor de la página.</p>
<p>Y también una breve descripción de lo que la página contiene:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"pagina web de prueba"</span><span class="nt">&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="la-etiqueta-raw-ltlinkgt-endraw-" href="#la-etiqueta-raw-ltlinkgt-endraw-"><br />
  </a><br />
  La etiqueta <code>&lt;link&gt;</code><br />
</h2>
<p>Útil para enlazar <code>css</code>:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">""</span> <span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<blockquote>
<p><em>Importante poner <code>type="text/css"</code> ya que VSCode no lo hace por defecto.</em></p>
</blockquote>
<p>Y también para poder establer un icon:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"shortcut icon"</span> <span class="na">href=</span><span class="s">"favicon.ico"</span> <span class="na">type=</span><span class="s">"image/x-icon"</span><span class="nt">&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>La estructura mejorada se veria así:</p>
<div class="highlight js-code-highlight">
<pre class="highlight html"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"author"</span> <span class="na">content=</span><span class="s">"Cristian Fernando"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"pagina web de prueba"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">""</span> <span class="na">type=</span><span class="s">"text/css"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"shortcut icon"</span> <span class="na">href=</span><span class="s">"favicon.ico"</span> <span class="na">type=</span><span class="s">"image/x-icon"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Quiza hay alguna manera que VSCode cree por defecto una página similar a esta, podriamos crear nuestro propios shortcuts también. Ya que da criterio de uno.</p>
<h2>
  <a name="referencias" href="#referencias"><br />
  </a><br />
  <strong>Referencias</strong><br />
</h2>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../etiquetas-que-no-debes-olvidar-en-tus-docs-html/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to use Tailwind CSS with a React App</title>
		<link>./../how-to-use-tailwind-css-with-a-react-app/index.html</link>
					<comments>./../how-to-use-tailwind-css-with-a-react-app/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 13:59:12 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../how-to-use-tailwind-css-with-a-react-app/index.html</guid>

					<description><![CDATA[What is Tailwind CSS? Tailwind is a modern CSS framework. It is a utility-first-based framework and provides you with a unique set of utility classes which makes the development process very easy and results in making a unique design. Utility-first CSS is fast, robust, and very efficient making your coding hassle-free. Tailwind CSS is also &#8230;<p class="read-more"> <a class="" href="./../how-to-use-tailwind-css-with-a-react-app/index.html"> <span class="screen-reader-text">How to use Tailwind CSS with a React App</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017300" id="article-body">
<h2>
  <a name="what-is-tailwind-css" href="#what-is-tailwind-css"><br />
  </a><br />
  What is Tailwind CSS?<br />
</h2>
<p>Tailwind is a modern CSS framework. It is a utility-first-based framework and provides you with a unique set of utility classes which makes the development process very easy and results in making a unique design. Utility-first CSS is fast, robust, and very efficient making your coding hassle-free. Tailwind CSS is also not opinionated; it means you are totally free to customize the design lament and website&#8217;s component.</p>
<p>Tailwind is a power pack of everything you need to create a website without writing any custom CSS. The main difference between Tailwind and its competitors is that it gives developers complete control over the styling of a web application.</p>
<h2>
  <a name="why-use-tailwind-css" href="#why-use-tailwind-css"><br />
  </a><br />
  Why Use Tailwind CSS?<br />
</h2>
<p>There’s a lot that goes on in web development. It can sometimes, thus, become an overly complicated task. Mapping the impact of styling might become tedious and time-consuming hampering the progress of the application/website.</p>
<p>Implementing Tailwind CSS will eliminate all the above-mentioned issues. Tailwind CSS creates small utilities with a defined set of options enabling easy integration of existing classes directly into the HTML code. Custom styling can be provided to the components with the help of this framework.</p>
<h2>
  <a name="tailwind-css-pros-and-cons" href="#tailwind-css-pros-and-cons"><br />
  </a><br />
  Tailwind CSS: Pros and Cons<br />
</h2>
<h3>
  <a name="tailwind-css-advantages" href="#tailwind-css-advantages"><br />
  </a><br />
  Tailwind CSS: Advantages<br />
</h3>
<ol>
<li>Control Over Styling</li>
<li>Faster CSS Styling Process</li>
<li>Responsiveness and Security</li>
<li>Additional Features</li>
</ol>
<h3>
  <a name="tailwind-css-disadvantages" href="#tailwind-css-disadvantages"><br />
  </a><br />
  Tailwind CSS: Disadvantages<br />
</h3>
<ol>
<li>Styling and HTML are Mixed</li>
<li>It Takes Time to Learn</li>
<li>Lack of Important Components</li>
<li>Documentation</li>
</ol>
<p>In this blog, we’ll demonstrate how to make Tailwind CSS work inside your React project without having to eject Create React App.</p>
<h2>
  <a name="using-tailwind-css-in-your-react-app" href="#using-tailwind-css-in-your-react-app"><br />
  </a><br />
  Using Tailwind CSS in your React App<br />
</h2>
<p>First, open your terminal and type the following commands to create a new project.</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>#using NPX
npx create-react-app tailwindreact-app

#using NPM
npm init react-app tailwindreact-app

#using yarn 
yarn create react-app tailwindreact-app
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>create-react-app is the official React build tool for scaffolding new React projects. It leverages webpack and babel and reduces the hassle of configuring and setting up the build processes for projects, allowing you to focus on writing the code that powers your app.</p>
<p>Next, install Tailwind and its dependencies:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>cd tailwindreact-app

npm install tailwindcss postcss-cli autoprefixer -D
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>We need to initialize Tailwind CSS by creating the default configurations. Type the command below in your terminal:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>npx tailwind init tailwind.config.js --full
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>This command creates a tailwind.config.js in your project’s base directory; the file contains the configuration, such as our colors, themes, media queries, and so on. It’s a useful file that helps with predefined sets of properties which will aid the need to re-brand certain conventions or properties if the need arises.</p>
<p>Now update tailwind.config.js:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}"],
}
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="how-to-configure-postcss" href="#how-to-configure-postcss"><br />
  </a><br />
  How To Configure PostCSS?<br />
</h2>
<p>The PostCSS documentation states that:</p>
<p>“PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.”</p>
<h2>
  <a name="why-autoprefixer" href="#why-autoprefixer"><br />
  </a><br />
  Why Autoprefixer?<br />
</h2>
<p>It’s necessary to install Autoprefixer alongside Tailwind CSS because Autoprefixer usually tracks caniuse.com to see which CSS properties need to be prefixed. Hence, Tailwind CSS does not provide any vendor prefixes. If you’re curious as a cat in regards to PostCSS navigates to their documentation.</p>
<p>Create a PostCSS configuration file in your base directory manually or using the command:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>touch postcss.config.js
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Add the following lines of code to your PostCSS file:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>const tailwindcss = require('tailwindcss');
module.exports = {
    plugins: [
        tailwindcss('./tailwind.config.js'),
        require('autoprefixer')
    ],
};
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Because PostCSS is necessary to lint our CSS, hence this configuration.</p>
<h2>
  <a name="update-scripts-in-packagejson" href="#update-scripts-in-packagejson"><br />
  </a><br />
  Update scripts in package.json<br />
</h2>
<p>Now navigate to your package.json file in your root directory and replace the &#8220;scripts&#8221; with the following:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>"scripts": {
    "start": "npm run build:css &amp;&amp; react-scripts start",
    "build": "npm run build:css &amp;&amp; react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "build:css": "postcss src/styles/tailwind.css -o src/styles/main.css"
},
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="create-your-styles-folder" href="#create-your-styles-folder"><br />
  </a><br />
  Create your styles folder<br />
</h2>
<p>Create a folder named <strong>styles</strong> inside of your src folder. This is where all your styles would be stored.</p>
<p>Inside the styles folder, create a <strong>tailwind.css</strong> and an <strong>index.css</strong> file.</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>/* src/styles/tailwind.css */

@tailwind base;
@tailwind components;
@tailwind utilities;
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<h2>
  <a name="import-maincss" href="#import-maincss"><br />
  </a><br />
  Import main.css<br />
</h2>
<p>You should delete the <strong>index.css</strong> and <strong>app.css</strong> files in your project root directory and remove the import statements in both the <strong>Index.js</strong> and <strong>App.js</strong> files respectively.</p>
<p>Now you are ready to import tailwind into your <strong>index.js</strong> file:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>import './styles/main.css';
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Now in your <strong>app.js</strong> file go ahead and add the following code:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>&lt;div className="text-red-500"&gt;
     TechvBlogs
&lt;/div&gt;
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p>Now It&#8217;s time to run our project:</p>
<div class="highlight js-code-highlight">
<pre class="highlight plaintext"><code>npm run start
</code></pre>
<div class="highlight__panel js-actions-panel">
<div class="highlight__panel-action js-fullscreen-code-action">
    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>
    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"/>
</svg></p>
<p>    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>
    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"/>
</svg></p>
</div>
</div>
</div>
<p><strong>Thank you</strong> for reading this blog.</p>
</p></div>

]]></content:encoded>
					
					<wfw:commentRss>./../how-to-use-tailwind-css-with-a-react-app/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Minimum Viable Security – Start Small, Then Iterate with David Melamed</title>
		<link>./../minimum-viable-security-start-small-then-iterate-with-david-melamed/index.html</link>
					<comments>./../minimum-viable-security-start-small-then-iterate-with-david-melamed/index.html#respond</comments>
		
		<dc:creator><![CDATA[Connected]]></dc:creator>
		<pubDate>Wed, 09 Mar 2022 13:59:00 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<guid isPermaLink="false">./../minimum-viable-security-start-small-then-iterate-with-david-melamed/index.html</guid>

					<description><![CDATA[David Melamed is one of five co-founders and the CTO at Jit, the continuous security platform for developers. He was born in France and holds a Ph.D. in bioinformatics. Professionally, he has been working for the past 20 years as a full-stack engineer, as a CTO, and as a technical evangelist mostly in cloud and, &#8230;<p class="read-more"> <a class="" href="./../minimum-viable-security-start-small-then-iterate-with-david-melamed/index.html"> <span class="screen-reader-text">Minimum Viable Security – Start Small, Then Iterate with David Melamed</span> Read More &#187;</a></p>]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div data-article-id="1017297" id="article-body">
<p>David Melamed is one of five co-founders and the CTO at <a href="https://www.jit.io/">Jit</a>, the continuous security platform for developers. He was born in France and holds a Ph.D. in bioinformatics. </p>
<p>Professionally, he has been working for the past 20 years as a full-stack engineer, as a CTO, and as a technical evangelist mostly in cloud and, in particular, in cloud security. He is very curious and likes knowledge-sharing and empowering other people. </p>
<p>In this episode, David talks with host, <a href="https://twitter.com/wyhaines">Kirk Haines</a>, about frictions between developers and security engineers because security is mostly an afterthought, the concept of minimum viable security (MVS), and really common things that people forget to think about when they are building their applications but that are very easy things to fix. </p>
<p><strong>Links:</strong></p>
<p><a href="https://www.jit.io/">Jit</a> (<a href="https://twitter.com/jit_io">Twitter</a> | <a href="https://www.linkedin.com/company/jit/">LinkedIn</a> | <a href="https://www.facebook.com/thejitcompany">Facebook</a>)<br />David Melamed: <a href="https://twitter.com/dvdmelamed">Twitter</a> | <a href="https://www.linkedin.com/in/mlmd/">LinkedIn</a> | <a href="https://github.com/dvdmelamed">GitHub</a></p>
<p>Do you have ideas about how we can make our show better? Or would you like to be a guest on an upcoming episode? Reach out to our #devrel team at <a href="https://dev.to/newrelic/mailto:devrel@newrelic.com">devrel@newrelic.com</a>. We would LOVE to hear from you with any questions, curiosities, and/or feedback you have in hopes of making this the best show possible!</p>
<p>Give us a follow: <a href="https://twitter.com/PolyglotShow">@PolyglotShow</a> </p>
<div class="podcastliquidtag" style="background: #8e0043" data-meta="{" podcastname="" viable="" security="" start="" small="" then="" iterate="" with="" david="" melamed="">
<div class="hidden-audio" id="hidden-audio-minimum-viable-security-start-small-then-iterate-with-david-melamed" style="display:none" data-episode="minimum-viable-security-start-small-then-iterate-with-david-melamed" data-podcast="polyglot">
  <audio id="audio" data-episode="minimum-viable-security-start-small-then-iterate-with-david-melamed" data-podcast="polyglot"><source src="https://www.buzzsprout.com/1677727/10204358-minimum-viable-security-start-small-then-iterate-with-david-melamed.mp3" type="audio/mpeg">Your browser does not support the audio element.<br />
  </source></audio></p>
</div>
</div>
<p><strong>Transcript:</strong></p>
<p>Kirk Haines: Welcome to Polyglot. My name is Kirk Haines. You can find me <a class="mentioned-user" href="https://dev.to/wyhaines">@wyhaines</a> on Twitter and pretty much anywhere else on the internet. And today, I&#8217;d like to welcome my guest, David Melamed.</p>
<p>David Melamed: Thank you, Kirk, for inviting me. So hi, everyone. I&#8217;m David Melamed. I&#8217;m one of the five co-founders and the CTO at Jit, the continuous security platform for developers. And a little bit about me maybe, I was born in France almost 44 years ago. I hold a Ph.D. in bioinformatics. I moved from France to Israel about 13 years ago, got married, and I have now four kids. </p>
<p>Professionally, I&#8217;ve been working for the past 20 years as a full-stack engineer, as a CTO, a technical evangelist mostly in cloud and, in particular, in cloud security for a couple of leading companies like MyHeritage, CloudLock, which was then acquired by Cisco where I led some strategical and technological project for the CTO office of the cloud security business unit. I&#8217;m usually very curious and like sharing my knowledge and also empower other people. And as part of this, I&#8217;ve been involved in a few local communities around Python and AWS throughout the last couple of years.</p>
<p>Kirk: Fantastic. Why don&#8217;t we just start at the beginning? And we&#8217;ll just work up to what you&#8217;re doing right now and then talk a little bit about what you&#8217;re doing right now. So you were born in France, and you have a Ph.D. in bioinformatics, correct? </p>
<p>David: Yes, exactly. </p>
<p>Kirk: How did you go from the Ph.D. in bioinformatics to working as a full-stack engineer? What was that transition like?</p>
<p>When I finished high school, I didn&#8217;t know what to do. I was always very curious, so I didn&#8217;t want to choose between different domains. And so I decided to do studies where I shouldn&#8217;t have to pick. And so I found at the beginning of my career path where I had a little bit of a mix of mathematics and biology, and a little bit of all the sciences together. But I was interested in biology, actually, and most of my studies were in biology because I think it was interesting. </p>
<p>But I have a hobby, and my hobby was computers. And so, at some point, I actually mixed both, and that&#8217;s how I ended up doing a Ph.D. in bioinformatics. After I got my Ph.D., I started to look for a job. And so it was natural to start to work in a company where they were building software for hospitals. And so I started to work there for a couple of years and then I moved to Israel. </p>
<p>And gradually, I moved from being only a back-end engineer at the beginning at MyHeritage, and then after a few years, I actually moved to my second position in Israel, and I was a CTO for a couple of months. And there, because I was CTO, I had to deal with a lot of different stuff, so naturally, I became full-stack. That&#8217;s how I ended up being full stack from starting in biology field, actually.</p>
<p>Kirk: [laughs] I love how the evolution of careers works that way sometimes. We just go in directions that if you could go back in time and ask us back then, we&#8217;d have no idea where we&#8217;re going to end up.</p>
<p>David: Yeah, definitely. I like to do so many stuff, so writing a book or writing poems. So I could do really different kinds of stuff, and I ended up just being a software engineer.</p>
<p>Kirk: That&#8217;s fantastic. So I assume, you know, when we were talking earlier, you mentioned Python. I assume, because of the bioinformatics and the fact that Python is used a lot in that field, Python was probably one of your early heavy influencers as far as the languages that you use. </p>
<p>David: So actually, not at all. When I worked in the bioinformatics field for my Ph.D., I actually ended up writing a software to visualize DNA in 3D, and I wrote it in Visual C++. And actually, most of the popular tools in bioinformatics back then were in Perl, so I learned Perl. And then, I worked in a company that used Java, so I learned Java. And then moved to Israel and got to MyHeritage, and they were using PHP, so I learned PHP. And then, as a CTO, they used Node, so I learned Node. </p>
<p>Kirk: [laughs]</p>
<p>David: Then I entered in the cybersecurity field in CloudLock, and there was Python, so I learned Python. So every time I&#8217;ll learn something new, and that was really exciting, actually.</p>
<p>Kirk: Yeah, that&#8217;s awesome. I always love it when I&#8217;m talking to people, and they mention Perl because Perl was the first language that I was, I guess you&#8217;d say, I was really, really good at. There are a lot of languages that you get exposed to in your career. But Perl was the first one where it was like, I know this language inside and out. And yet I don&#8217;t think I&#8217;ve written a line of Perl in 10 years. </p>
<p>David: Yeah, me neither. [laughs]</p>
<p>Kirk: Yeah, that&#8217;s fascinating.</p>
<p>David: Same thing for PHP. Every time I moved around to another language, I just wrote something. I learned something new and then moved on.</p>
<p>Kirk: Yep, it&#8217;s fun that way. So, what are you doing now?</p>
<p>David: So right now, I am a co-founder and CTO in a small startup in early-stage called Jit. And what we do there is that we&#8217;re trying to solve a very hard problem that nowadays seems more and more critical to solve, and that&#8217;s how to deal with delivering secure cloud applications. And it&#8217;s a hard problem because security engineers are not the ones that are owning the cloud application. That&#8217;s the engineers. That&#8217;s the engineers that are living in the engineering organizations. </p>
<p>But the problem is that if you&#8217;re looking at today&#8217;s world and trends, you&#8217;ll see things like microservices and CI/CD. All those different trends are all in favor of making sure that you can deliver fast, and you can have a small feedback cycle with the market. And the problem is that if you&#8217;re looking at engineers, they would say, &#8220;Yes, we&#8217;re owning our microservice. We&#8217;re building them; we&#8217;re testing them; we&#8217;re deploying them. We&#8217;re supporting them.&#8221; But one thing they&#8217;re not doing is securing them because most of the ownership of security is not within the realm of the engineering organizations. </p>
<p>And so, there are a lot of frictions between developers and security engineers because security is mostly an afterthought. And it&#8217;s not built-in inside the process of writing the software. And you cannot blame really engineers because most of them are not super experts in security. Most of them are not even measured upon their technical knowledge of security and how secure is their code. They&#8217;re mostly measured by how many bugs maybe they&#8217;re writing, the performance of the application, but not so much about security. That&#8217;s a real problem. </p>
<p>And there are a lot of organizations that are progressive today that are trying to solve this problem. And they&#8217;re saying the following, like in the past where QA was actually a separate function, and there was actually friction between test engineers, QA engineers, and developers, and so the way organizations actually ended up fixing the problem is by incorporating QA inside the microservice teams. </p>
<p>Well, the same way security should work, meaning that the engineering organization should own the risk. They should not depend on some external team in order to be able to secure the microservice they&#8217;re building. And so more and more, you see those trends how to be able to make security not an afterthought but something that is really part of the whole process of building the application.</p>
<p>Kirk: That makes sense. You mentioned when we were chatting earlier about the concept of minimum viable security. Do I have that right? MVS? </p>
<p>David: Yes. </p>
<p>Kirk: What is that?</p>
<p>David: The thing is, if now you&#8217;re asking engineers and the engineering organization to own the risk and to be able to deal with security, there are a few challenges they need to overcome. One of the challenges is that they don&#8217;t know what to do. If you&#8217;re asking any startup at the beginning if their product is secure or what did they do in terms of security, everyone will tell you something different because there&#8217;s no real standard. And so, the first thing they need to actually know is what to do. </p>
<p>The second thing is that if you&#8217;re talking with engineers, you definitely do not want to disrupt them and make them do something that is outside of their normal flow. And so, if you want them to own security, it should be part of agile processes. And so the way agile is working is that you&#8217;re starting with something, and then you iterate. </p>
<p>The concept of MVS of the minimal viable security is to say the following: you don&#8217;t want to take a whole list of security requirements like you can find online. This is actually the first thing that any CTO would do. They will check online for some security checklist. What do I need to do? Most of the lists are actually big, and so that&#8217;s scary. </p>
<p>But basically, the MVS concept says that if you can start with something that is minimal, only the critical stuff, the baseline, the thing that without it, you would actually be ashamed to release your application to production. And then, like in any agile process, you would iterate. You would iterate, and you would add more and more security. And that&#8217;s what the concept is actually trying to express. You will start small, and then you iterate. </p>
<p>And so, of course, when you&#8217;re hearing of something like minimum and security in the same sentence, it seems weird because usually, you want as much security as you can. The problem is that in many startups, they don&#8217;t have enough focus on security, and so they end up doing whatever they believe is critical, but it&#8217;s not all the time the best thing or the minimal thing to do. </p>
<p>And so what we&#8217;re doing at Jit, for example, is that we want to provide this list of minimal thing. And so this security plan is this list of requirements that are tailored to your environment. And basically, you start with it. It&#8217;s not the end of the journey; it&#8217;s only the beginning because security is always a journey. There&#8217;s no really end. You can always add more. And so you iterate every time, and you add more. But the thing is to do that continuously. </p>
<p>Like in agile, you have CI. You have continuous integration. Every time you add something new, you don&#8217;t want to break other stuff, so you have sanity test, regression test, the same thing here. Every time you add new security, you still want to be able to monitor the things that you already did. And so that&#8217;s why we&#8217;re talking here about also the concept of continuous security, which is another paradigm on top of CI/CD we can think of CS. </p>
<p>I can actually give a few examples of things that are minimal because there are a lot of different interesting items or controls that we can talk about. And there are different areas actually that are involved here when you&#8217;re talking about product security. For example, you can, of course, take a look at the code. In the code, you can look at things like vulnerability in the code and add some SAST scanner static analysis. That should be very basic.</p>
<p>You can also take a look at dependencies, and you can add some SCA control. So you&#8217;re checking the dependencies to see if there are some vulnerabilities that are known there. And we&#8217;re talking a lot about it in the media right now with Log4j and all the other vulnerabilities because that&#8217;s a critical problem. </p>
<p>But there are things beyond code, of course, because you can secure your code as much as you want. If, for example, you&#8217;re not securing your GitHub accounts with, let&#8217;s say, something like MFA, then you actually leave a door and a hole wide open for any attacker to insert malicious code in your pipeline. So you also need to take care of the pipeline.</p>
<p>You need to take care also about the runtime of your application. And there is something minimal that you can do. For example, if you&#8217;re using AWS, you need to make sure that, of course, you use MFA for your accounts. You need to make sure you&#8217;re not using your root accounts. There are a lot of things that are really minimal. And if you do some automation there, it can be really done with a simple click of a button. But beyond that, I&#8217;ll only talk here about the technical controls. </p>
<p>There is another category of controls that are also very interesting, and most of the time, they&#8217;re kind of overlooked, for example, all the things that are related to processes. If you think of an employee leaving a company, you have a whole process of onboarding. And so making sure that you remove access from the employee that&#8217;s something that&#8217;s usually overlooked because it&#8217;s hard to maintain the list of all the services that employees have access to. </p>
<p>And so I think that if you want really to take care of your product security, you need to have a combination, a mix between technical controls and actually human processes. And both need to be managed in a way that you know exactly what you have done so far and what you need to do. </p>
<p>When I look at most of the cybersecurity companies, every company is giving a different product, and each one is actually focusing in a different area. But the problem I see in the current industry is that you can buy, I don&#8217;t know, maybe ten different products, and you know what you&#8217;ll get because each product will focus on a specific area. </p>
<p>What you won&#8217;t know is actually what are the spots that you&#8217;re missing? What are your hidden spots? And that&#8217;s why it&#8217;s important to have a list so that you can have a frame, and you can see the big picture, the map of all the different areas that you need to take care of and all the risks, and then you can buy all the products that you want in order to cover those risks.</p>
<p>Kirk: So does Jit then…do you focus on helping people to understand what that list is for their particular environment? Is that what you do or?</p>
<p>David: Yeah, exactly. So at Jit, we believe that tomorrow every cloud application should start by adding security from the zero. And the problem is that it&#8217;s hard because there are a lot of things to do. So what we want to provide is the list of the minimal stuff that you need to do when you&#8217;re starting your project. And then we can talk about more advanced plans in the future, something like, I don&#8217;t know, you want compliance because you have a business need for that. That&#8217;s afterwards. </p>
<p>But the principle is that you will start with something minimal. The list will be entirely automated, so that&#8217;s by applying your list, you would be able to see all the integrations in your environment, whether it&#8217;s in the CI/CD, whether it&#8217;s in your runtime, in your pipeline, all the different areas that are relevant to your product security. And of course, we also provide this list, and it&#8217;s displaying as code. Because we believe that we&#8217;re dealing with engineers, and so they probably want to do some customization because every organization is working in a different way. So the processes that they have may be different. That&#8217;s one reason. </p>
<p>And the other reason is that basically, if you&#8217;re looking at the risks, when you&#8217;re looking at, and you&#8217;re trying to analyze a cloud application, most of the risks are the same between all the applications that&#8217;s based on the architecture, 80% are the same. But there are still 20% that are really specific to your organization. And because we don&#8217;t know that by advance, by expressing the plan as code, it allows you to actually add your own risks or an item in the plan. </p>
<p>And so, first of all, we&#8217;re developing everything as code because we also are thinking that the communities that we want to build will help us add all the different controls. We don&#8217;t want to reinvent cybersecurity. And so we&#8217;re not writing our own tools, or we&#8217;re not starting there, at least. We want to be able to leverage all the awesome open-source tools that are existing already in the industry. And then we want to be able to add to that companies and commercials that also are doing great products. </p>
<p>And so, we want to orchestrate all these different tools in a way that you have a list with different options for different controls. If you want something free&#8230;and we believe MVS should be free for everyone because this is our vision. We believe in a world where every cloud application should be secured from the zero, and that&#8217;s why MVS should be free. But then you have some more advanced business needs. And for that, we think that integrating with some commercial product will certainly be required.</p>
<p>Kirk: Okay, let me pose a hypothetical to you then because I&#8217;m curious how this actually works. So let&#8217;s say that I have an application, a Ruby on Rails application with a very standard typical Ruby on Rails architecture. We&#8217;re hosted on AWS, and we&#8217;ve got a Postgres database. And maybe there are a couple of other services that we hit for pieces of data. But it&#8217;s nothing terribly sophisticated because it&#8217;s a fairly young application. And we want to start concentrating on security, and we want to apply the MVS principle to it. So we come to Jit. And what do we do? How does this work?</p>
<p>David: So basically, right now, you&#8217;re just installing a GitHub application. And once you install the application, you automatically get the basic plan, so the MVS plan. And we add this MVS plan to your GitHub in a specific repo to your GitHub organization so that you can see the plan as code. And you can also see it in the UI, and you can review the plan. The plan is actually grouped in different layers. So you have the code, you have the architecture, the infrastructure, you have third-party services. You have a list of different layers. </p>
<p>And in each layer, you have a list of items, the things that Jit will do. And so, by just committing the plan as you would do for some code that you would commit to Git, you&#8217;re committing the plan. The plan is getting sent to your GitHub organization. And also, automatically, we&#8217;re adding integrations. So let&#8217;s say, for example, integrations with the code that would be in the CI. And so what we&#8217;re doing is that we&#8217;re generating from the plan a list of&#8230;let&#8217;s say in the CI you&#8217;re using GitHub Actions. Then we generate a GitHub workflow file that would include all the different tools that we believe you need because each one is tied to a different item in the plan. </p>
<p>And that&#8217;s how we automatically monitor your code in a central way because we actually built some nice innovation here that you don&#8217;t need to touch all your repos. We actually built something central. So we have only one repo that you define the security. And we&#8217;re listening to all the PRs, all the pull requests in your environment. And basically, for each PR, we&#8217;re triggering those tools in a central way. And then you have a very great experience as the developer because you see everything into the PR itself. So we would do a security review like a peer review of your code. That&#8217;s the experience in the code. </p>
<p>In other areas, for example, we have also integration with AWS. So there, we have a role that is trusting your organization. Basically, you&#8217;re giving us read access to AWS, and we can make sure that you have CloudTrail enabled. So we can do that either as code if you&#8217;re using Infrastructure as Code like Terraform, or we can actually check that in your environment. And let&#8217;s say one of the basic stuff that you need to do when you&#8217;re using AWS is, for example, making sure you have audit logs using CloudTrail. </p>
<p>So we would actually show you the list of the tests that we&#8217;re doing. The test would be here that you have CloudTrail enabled, and you would fail for that because you don&#8217;t have CloudTrail enabled. And then you can remediate to that by just clicking on a button. You would be able to enable CloudTrail either by adding a PR in your code, or if we had write access, we would be able to trigger it through API.</p>
<p>Kirk: Very neat. So the MVS plan, you said it&#8217;s expressed in code. What is that implemented in?</p>
<p>David: So here, it&#8217;s interesting because we had a lot of thoughts how we express something like that because it would look like to the list. But on the other hand, we wanted really a powerful language. So we went with something that isn&#8217;t really code; it&#8217;s actually declarative code. So it&#8217;s actually a bunch of YAML files that are defining the different concepts. So we have the concept of items, and items can actually be part of multiple plans. So you can have a plan that is MVS. But the same item can also be part of a bigger plan like SOC 2. </p>
<p>And so if you&#8217;re actually implementing and applying the MVS plan, and let&#8217;s say you&#8217;re adding an incident response plan in your environment, you&#8217;re automatically also making progress towards SOC 2  because it&#8217;s the same item that is also present in a second plan. So we can think of a grid when you have all the different plans mapped with all the controls mapped from different plans one to each other. And basically, when you&#8217;re applying some of the items in plan A, you&#8217;re also making progress in plan B, C, and D because they share the same items.</p>
<p>Kirk: Okay, so you have a bunch of YAML files that define portions of your plan. And then you have some sort of a central engine then that interprets those YAML files and applies the plans. Am I understanding that correctly?</p>
<p>David: Yes. So the plan right now is expressed in YAML. And for each item, you have a list of workflows that are implemented. And those workflows can run in different, let&#8217;s say, runners. One runner can be GitHub Action. One runner can be our cloud; one runner can be your cloud. That&#8217;s the way the engine is actually translating the plan into something that is executable, and that can run in any of the environments that I mentioned. </p>
<p>Kirk: That&#8217;s a pretty neat implementation. So is it language-agnostic in the sense that okay, so we talked about Ruby on Rails. But what if I have an Elixir app, or I have a Crystal app or something like that? Are you language-agnostic, or are there certain language families that you support better than others right now?</p>
<p>David: So right now, we have already a couple of controls, and some of the controls are language-agnostic. For example, we have a control that is checking for secrets where you are leveraging the open-source, a great open-source Gitleaks. And it&#8217;s completely language-agnostic because it&#8217;s searching for certain patterns, certain patterns in the code such as RegEX for secrets, so that&#8217;s completely language-agnostic. </p>
<p>Other tools that we&#8217;re using, for example, for SAST, are dependent on the language. And for that, we&#8217;re already supporting a couple of languages. And we&#8217;re adding more every time because what we&#8217;ve built for the last couple of months, actually, is the ability to wrap all those controls into containers that can be integrated with our platform very easily.</p>
<p>Kirk: So I&#8217;m curious about something. We&#8217;ve been talking about the things that people should do. And I know from my experience with Rails applications sometimes it&#8217;s really easy to, as you&#8217;ve mentioned, overlook simple things just because you&#8217;re focused on the features that have to be delivered and your deadlines. And you&#8217;re not focused on even sometimes very simple aspects of security. So I&#8217;m just kind of curious, what are a few of the really common things that people forget to even think about when they are building their applications but that are very easy things to fix? Are there some patterns there that you&#8217;ve noticed?</p>
<p>David: Yeah. So, for example, and I can tell you that from the users that are already using our platform. We got some great feedback from people telling us that &#8220;You saved us because we managed to identify secrets that were in the PR.&#8221; It&#8217;s really easy today to forget some secrets in your code because you&#8217;re testing something locally, and you&#8217;re not reviewing enough of your code while you&#8217;re committing it. </p>
<p>But the thing is that once you commit that to GitHub, basically, even if it&#8217;s a private repository, it&#8217;s already not really secure because you don&#8217;t know who can read it. And so, even if we discovered that you still need to recycle it. So that&#8217;s really a basic thing. And one way would be to add something in your CI. One other way would be to add some pre-commit hook in your own machine so that actually you&#8217;re checking your code before committing it so that secrets won&#8217;t be leaked. </p>
<p>Another thing if we&#8217;re always talking about secrets is that also a pattern that is common is that a lot of people are actually working with AWS keys. And the right way to actually or the better way to work with that is to use tools like AWS Vault so that your keys are never stored in your own laptop in plain text because otherwise, it can be committed by default. Or if you&#8217;re not paying attention, for example, you would have that in some environment variables, and by mistake, you would commit your file. With Bash profile file, it can happen. So I would say that secret is very, very basic, something that you need to check. </p>
<p>Also, if you&#8217;re working with an AWS environment, I know a lot of people that are still using and abusing the root account. And at Jit, we actually spent quite some time trying to find the best way to work with securing and bootstrapping AWS accounts. And I&#8217;m actually writing a blog right now about it. So I want to share how to do the first step of bootstrapping an account that would be secure so that, for example, you don&#8217;t have to define users in multiple places. Let&#8217;s say you have multiple accounts. You shouldn&#8217;t define your user in multiple ways because you&#8217;re actually increasing your attack surface all the time with that. </p>
<p>And so we ended up creating a dedicated AWS account for the users, and they&#8217;re actually switching roles. And that&#8217;s everything is code using Terraform. They will actually switch roles between the different accounts in order to get access. And there, you can be secure because you can enforce MFA, for example. So you would make sure that if someone manages to grab the credential of the users, he won&#8217;t be able to get to production, for example, because he wouldn&#8217;t be able to bypass MFA so easily. </p>
<p>So there are a lot of things that actually are not that hard to do, but if you don&#8217;t know what you need to do, it&#8217;s kind of hard to find them. Because, for example, for AWS, I was looking for hours online for a simple tutorial on how to secure my account, and there&#8217;s no such resource. There are a lot of things you can find, but you&#8217;re not even sure that that&#8217;s the best way to do that, or these are the most critical things you need to do. </p>
<p>And that&#8217;s why also we want to bring that to everyone. That&#8217;s why we believe that MVS should be free because it&#8217;s really easy to overlook those things. And it&#8217;s not that complicated to apply them once they&#8217;re automated, of course, and that&#8217;s why we&#8217;re working hard on automation.</p>
<p>Kirk: Very neat. It sounds like what you&#8217;ve got is you&#8217;ve got a concept here, and you&#8217;ve got a service here that regardless of whether someone is using a mainstream language or something less mainstream, whether it&#8217;s something that you have specific language support for or not, pretty much every project out there probably can benefit some from what you&#8217;re doing because of those simple things like the AWS security and the secrets you&#8217;re monitoring. </p>
<p>I know that (I&#8217;m not going to name names.), but there was one company that I worked with where exactly what you said, the AWS stuff was all under the root user. There were no IAM profiles for different users being used. And that was a very simple thing that helped lock things down because when you&#8217;re off-boarding people who leave the company, if they have access to that root user, you&#8217;ve got a huge vulnerability, and it&#8217;s an easy one to miss. </p>
<p>David: Yeah, exactly. And that&#8217;s why, for example, the way we implemented that in our companies that we have everything as code in Terraform and basically adding and removing a user is a matter of one line in the Terraform code. And so I can grant access to another environment by adding a line. I can remove the user by just removing two lines in the code. </p>
<p>Kirk: That&#8217;s fantastic. </p>
<p>David: And also another thing is that I defined in each environment a role that has only read-only access and another that has write access because the same thing; you want to apply the least privileged access. So, on one hand, you want your developers to be able to debug things in production sometimes. There&#8217;s no other way to do that. But on the other hand, you definitely don&#8217;t want to give them write access there because of the possible consequences. And so the basic stuff that you need to do is to have two roles. That&#8217;s where I would start.</p>
<p>But then you can think of, okay, maybe I can actually scope my read-only access down to only the services that the developer is supposed to check. For example, if he needs logs, I will give you access to logs. And I wouldn&#8217;t give him access to the Lambda code or, I don&#8217;t know, to any other services because he doesn&#8217;t need that. And that&#8217;s how you implement gradually least privileged access. You can also do that differently by, for example, checking CloudTrail and seeing exactly what are the APIs and the services that are used. And so you can scope down all the roles. </p>
<p>So there are a lot of things you can do, but the thing is, and that&#8217;s my main message, is you need to do that gradually. And especially if you want developers that are really, really busy with writing the code, and testing the code, and deploying, and supporting, you don&#8217;t want to give them a lot of work on top of that. So that&#8217;s why automation is really key here. </p>
<p>And you want also to give him access to data just in time. This is what we&#8217;re called JIT, just in time. Because what kills developers is actually context switch. And so every time that you can give him information about security issues when he&#8217;s actually working on that, then he will definitely fix it. But if the bug is already in production and then he needs to fix it, there&#8217;s a huge cost associated with that. </p>
<p>So people sometimes say that developers don&#8217;t care about security; it&#8217;s not that they don&#8217;t care about security. That&#8217;s not their main job, maybe. But all the time, they&#8217;re getting the thing that they need to fix out-of-band. And so that&#8217;s terrible for them because it&#8217;s a lot of context switch. And that&#8217;s what we&#8217;re trying to achieve here is giving them the proper context and the information right in time.</p>
<p>Kirk: Fantastic. You wrapped everything up so nicely there. So I think we should probably start segueing towards concluding this episode of the Polyglot Show. So I want to thank you very much for coming on the show. And I want to give you a chance to let people know where they can find you online if they want to talk with you more about this or find out any other information. And also, if there&#8217;s anything that you just want to mention that we haven&#8217;t had a chance to bring up yet, go ahead and mention it now.</p>
<p>David: Sure. First of all, that was my pleasure. That was really, really nice for you to host me in your show, and I really enjoyed our conversation. For anyone who is interested to know more about the concept of MVS that we&#8217;ve actually taken from the concept of MVP, the minimal viable product in the product world, for anyone who wants to know more about that and is interested even to test our platform, we are currently in early release, just visit our website jit.io. And then there&#8217;s a simple button, get started, and then you&#8217;ll be able to start and test our platform. </p>
<p>And we have a big vision about where we want to go from here though actually, our motto is that we don&#8217;t have&#8230;you know, Toy Story with their motto, right? To infinity and beyond. So this is definitely our motto. We believe that there&#8217;s no real limits to what we can cover because we want in the future to ask the community to actually help us write controls and integrate that with our platform because we want, at the end, the world to be a more secure place. </p>
<p>And so this is what I would like to wish to everyone is to have better, secure product. If I can help anyone or you want to find me, you can find me on GitHub, dvdmelamed. That&#8217;s really easy because I was a big fan of movies, so it&#8217;s dvdmelamed, same thing on Twitter. You can also find me on LinkedIn. I will be around in many conferences for the upcoming month. And so I&#8217;d be happy to talk with anyone who is interested in security. And thank you again for having me on your show.</p>
<p>Kirk: Thank you for joining me. It was a great conversation. And thanks everybody else for listening to us. You can find us on Twitter @PolyglotShow. And this is Kirk Haines for New Relic. Thank you, and we&#8217;ll catch you again next week.</p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /></p>
]]></content:encoded>
					
					<wfw:commentRss>./../minimum-viable-security-start-small-then-iterate-with-david-melamed/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		<enclosure url="https://www.buzzsprout.com/1677727/10204358-minimum-viable-security-start-small-then-iterate-with-david-melamed.mp3" length="0" type="audio/mpeg" />

			</item>
	</channel>
</rss>
